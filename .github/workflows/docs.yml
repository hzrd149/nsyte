name: Deploy Docs
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Deploy Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Site
        run: |
          # Set up Python virtual environment for docs
          python3 -m venv .venv/docs
          .venv/docs/bin/pip install -r requirements-docs.txt
          
          # Build the complete site (splash + docs)
          ./scripts/build-site.sh
          
      - name: deploy nsite
        uses: sandwichfarm/nsite-action@v0.2.1
        id: nsite_deploy
        with:
          directory: "./dist"
          nbunksec: ${{ secrets.NSITE_NBUNKSEC }}
          fallback: "404.html"
          relays: |
            wss://relay.nostr.band
            wss://relay.damus.io
            wss://nos.lol
            wss://nostrue.com
            wss://nostr.mom
          servers: |
            https://cdn.hzrd149.com/
            https://cdn.sovbit.host/
          publish_server_list: 'true'
          publish_relay_list: 'true'
          publish_profile: 'true'
          purge: true
      
      - name: Deploy to Bunny.net CDN
        uses: ayeressian/bunnycdn-storage-deploy@v2.2.2
        with:
          source: "./dist"
          destination: "/"
          storageZoneName: ${{ secrets.BUNNY_STORAGE_ZONE }}
          accessKey: ${{ secrets.BUNNY_ACCESS_KEY }}
          storagePassword: ${{ secrets.BUNNY_STORAGE_PASSWORD }}
          upload: "true"
          purgePullZone: "true"
          
      - name: Purge Bunny.net CDN Cache
        run: |
          curl -X POST "https://api.bunny.net/pullzone/${{ secrets.BUNNY_PULLZONE_ID }}/purgeCache" \
            -H "AccessKey: ${{ secrets.BUNNY_ACCESS_KEY }}" \
            -H "Content-Type: application/json"